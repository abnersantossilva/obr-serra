numero distanciaTriangulo = 0
numero multiDistancia = 0
numero distancia = 0
booleano ciclo = verdadeiro
booleano achouVitima = verdadeiro


tarefa resgate{

levantar(6000)
    enquanto (ciclo) farei {
        se(ultra(3) < 10) entao {
            se(ultra(1) < 20 ou ultra(1) > 100) entao {
                tras(150)
                esperar(500)
                direita(1000)
                esperar(3400)
            } senao {
                enquanto (ciclo) farei {
                    se(achouVitima == verdadeiro) entao {
                        direita(1000)
                        esperar(3400)
                    }
                    achouVitima = verdadeiro
                    enquanto (achouVitima) farei{
                        frente(150)
                        se (ultra(3) > 7 e ultra(2) < 130 )entao{
                            escrever(3, "ja chega")
                            parar()
                            se(ultra(2) < 60) entao{
                                multiDistancia = 42
                            }senao {
                                multiDistancia = 30
                            }
                            distancia = ultra(2) * multiDistancia
                            direita(1000)
                            esperar(3380)
                            tras(100)
                            esperar(1000)
                            parar()
                            baixar(7000)
                            frente(125)
                            esperar(distancia)
                            frente(125)
                            levantar(3700)
                            distancia = distancia + 3700
                            tras(125)
                            esperar(distancia)
                            direita(1000)
                            esperar(3900)
                            enquanto (achouVitima) farei {
                                se(ultra(3) < 10 e (ultra(1) < 20 ou ultra(1) > 100)) entao {  
                                    tras(150)
                                    esperar(500)
                                    direita(1000)
                                    esperar(4000)
                                }senao se ( ultra(3) < 10 e (ultra(1) > 20 ou ultra(1) < 100) ) entao {
                                    se (ultra(1) < 42) entao{
                                        direita(1000)
                                        esperar(2000)
                                    }
                                    parar()
                                    baixar(5000)
                                    tras(300)
                                    esperar(200)
                                    frente(300)
                                    esperar(350)
                                    parar()
                                    esperar(1200)
                                    levantar(4000)
                                    tras(100)
                                    esperar(500)
                                    direita(1000)
                                    esperar(3800)
                                    achouVitima = falso
                                }
                                frente(50)
                            }  
                        } senao se (ultra(1) < 14 e ultra(3) < 7 ) entao{
                            tras(150)
                            esperar(500)
                            direita(1000)
                            esperar(3400)
                        } senao se (ultra(1) > 14 e ultra(3) < 7 ) entao {
                            tras(130)
			                esperar(560)
			                parar()
			                baixar(4800)
			                frente(100)
			                esperar(2200)
			                parar()
			                levantar(3390)
			                tras(100)
			                esperar(1800)
                        }
                    }
                }
            }
        }senao{
            frente(200)
        }
    }
}

tarefa desvio{

    se (ultra(3)<10) entao{
        tras(90)
        esperar(500)
        direita(1000)
        esperar(2100)
        frente(100)
        esperar(2000)
        esquerda(1000)
        esperar(2100)
        frente(100)
        esperar(2550)
        esquerda(1000)
        esperar(2520)
        enquanto (luz(5) > 40) farei{
            frente(120)
        }
        frente(100)
        esperar(950)
        direita(1000)
        esperar(2400)
        tras(75)
        esperar(500)
    }
}
tarefa seguidor{

    # frente

    se (luz(2) > 40 e luz(4) > 40 e luz(3) < 40 e luz(1) > 40 e luz(5) >40) entao { 
        frente(120) 
    }

    # curva esquerda
    senao se (luz(4) < 40 ) entao{ 
        esquerda(200)
    }

    senao se (luz(5) < 40 ) entao{ 
        esquerda(200)
    }


    # curva direita
    senao se(luz(2) < 40) entao{
        direita(200)
    }

    senao se(luz(1) < 40) entao{
        direita(200)
    }

    # curva 90 E
    se (luz(5) < 40 e luz(3) < 40) entao{ 
        esperar(1000)
        frente(100)
        esperar(750)
        esquerda(1000) 
        esperar(2850) 
        tras(50) 
        esperar(300)
    } 


    #curva 90 D
    senao se (luz(1) < 40 e luz(3) < 40) entao{
        frente(100) 
        esperar(750) 
        direita(1000) 
        esperar(2850) 
        tras(50) 
        esperar(300)
    }

    #verde direita
    se(cor(2) == "VERDE") entao{
        frente(120)
        esperar(900)
        direita(1000)
        esperar(2250)
        tras(50)
        esperar(200)
    }

    #verde esquerda
    senao se(cor(4) == "VERDE") entao{
        frente(120)
        esperar(900)
        esquerda(1000)
        esperar(2250)
        tras(50)
        esperar(200)
    }
}

tarefa rampa{
    baixar(3000)

    se (ultra(2) < 35.5 e (inclinacao() > 335)) entao{

        enquanto(ultra(2) < 35.5 ) farei{

            se (luz(2) > 40 e luz(4) > 40 e luz(3) < 40 e luz(1) > 40 e luz(5) >40) entao { 
                frente(75) 
            }

            # curva esquerda
            senao se (luz(4) < 40 ) entao{ 
                esquerda(200)
            }

            senao se (luz(5) < 40 ) entao{ 
                esquerda(200)
            }

            # curva direita
            senao se(luz(2) < 40) entao{
                direita(200)
            }

            senao se(luz(1) < 40) entao{
                direita(200)
            }
        }
    }
}


inicio
    levantar(6000)
    

    enquanto(verdadeiro) farei{
        escrevernumero(1, inclinacao())
        se((cor(3) == "VERMELHO" ou cor(1) == "VERMELHO" ou cor(5) == "VERMELHO" ou cor(2) == "VERMELHO" ou cor(4) == "VERMELHO") e inclinacao() > 335) entao{
            frente(100)
            esperar(230)
            escrever(2, "Hello World")
            rampa()
            resgate()
        }
        se (ultra(3) > 10) entao{
            seguidor()
        }
        se (ultra(3) < 10) entao{
            desvio()
        }
        se (ultra(2) < 35.5 e (inclinacao() > 335)) entao{
            escrever(2, "Hello World")
            rampa()
            resgate()
        }   
        
    }
fim
